Installing git on Windows
-----------------------------
1 Open https://git-scm.com/downloads
2 Download git for windows 
3 Install it
4 Once git is installed we get an application called git bash
  This is the command prompt of git where git commands can be executed

Installing git on Linux(Ubuntu)
----------------------------------
1 Open a linux terminal
2 Update the apt repository
  sudo apt-get update
3 Install git
  sudo apt-get install -y git

To check the version of git
git --version

Setting username and email globally for all the users of this machine
git config --global user.name "sai krishna"
git config --global user.email "sai@gmail.com"

Git when working on the local machine uses three components
1 Working directory or workspace
2 Stagging Area
3 Local repository

Working directory is the folder where the developer creates all the code
Initially all the files present here are called untracked files.

Stagging area is the temporary buffer zone into which the files are moved before version controlling happens and these files are called stagged files.

Local repository is the location where verison controlling happens for the individual developer.All the files here are called commited files.

1 To convert the working dir into a repository where git commands can be executed
  git init
  The above command creates a  hidden folder called .git whcih contians all the   configurations that are necessary for git to run.

2 To send files from working dir to stagging area
  git add filename
  To send multiple files into stagging area
  git add file1 file2 file3
  To send all files and folders into stagging area
  git add .
  Note   . represents current working directory in linux

3 To remove a a file from stagging area and bring it back to untracked section
  git rm --cached filename
  (or)
  git reset filename

4 To send files from stagging area to the local repository
  git commit -m "Some message"

5 To see the status of the unstracked files and stagged files
  git status

6 To see the commits that are done in local repository
  git log
  To see the output of the above command in one line format
  git log --oneline

Passwordless SSH
----------------------
SSH is a protocal using which one user present on a linux machine can communicate with another user on another linux server

Master/Slave in Jenkins
-------------------------
This is used when we want to run multiple jenkins jobs at the same time.
When so many job are executed parallelly it will downgrade the perfromance of the
servers where these jobs are running.We can solve this problem using master slave of jenkins where we can distribute the jenkins work load to the slave machines

Setup
======
1 Create a new AWS instance and name it "Slave"
2 Establish passwordless ssh betwen master(jenkinserver) and slave
  a) Open terminal in slave and Change the password for ubuntu
     sudo passwd ubuntu
  b) Edit the /etc/ssh/sshd_config file
     sudo vim /etc/ssh/sshd_config
     Search for "PasswordAuthentication" and change it from no to yes
     Save and quit   ESc :wq  Enter
  c) Restart ssh
     sudo service ssh restart
  d) Open terminal in master machine  and generate the ssh keys
     ssh-keygen
     The above command will create 2 keys public key nad privat key in the
     .ssh folder
  e) Copy the public keys to the slave machine
     ssh-copy-id ubuntu@ipaddress_of_salve

3 Install the same version of java in the slave as that is present on the master
4 Download slave.jar from master 
  wget http://ipaddress_of_jenkinsserver:8080/jnlpJars/slave.jar
5 Give execute permissions on slave.jar
  chmod u+x slave.jar
6 Create a folder which will work as workspace for jenkins
  mkdir workspace
























 
     















































  















































































